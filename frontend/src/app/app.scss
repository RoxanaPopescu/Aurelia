@import "resources/index";

main,
router-view
{
    // Use horizontal flex layout.
    display: flex;

    // Fill the available space.
    flex-grow: 1;

    // Allow the element to shrink.
    min-width: 0;

    // Fill the available height.
    height: 100%;
}

react-module
{
    // Ensure react modules fill the content area of the viewport.
    // We must use absoliute positioning to do this, due to the legacy styles.
    position: absolute;
    height: 100vh;

    width: calc(100vw - var(--size-app-sidebar-width-expanded));
    left: var(--size-app-sidebar-width-expanded);

    .sideMenu--collapsed &
    {
        width: calc(100vw - var(--size-app-sidebar-width));
        left: var(--size-app-sidebar-width);
    }

    // Use vertical flex layout.
    display: flex;
    flex-direction: column;

    // Ensure react modules never overlap any app elements.
    z-index: 0;

    // Import legacy styles.
    @import "../legacy/shared/src/webKit/LEGACY";

    .c-login-outerContainer,
    .c-activation-outerContainer
    {
        position: fixed;
        left: 0;
        right: 0;
    }
}

.button-row
{
    display: flex;

    > button:not(:last-child)
    {
        margin-right: var(--size-inline-spacing)
    }
}

@media ($media-smallest-max)
{
    app-sidebar.--expanded
    {
        width: 100vw !important;
    }
}

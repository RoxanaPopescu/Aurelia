@import "resources/index";

main,
.app-container,
router-view
{
    // Use horizontal flex layout.
    display: flex;

    // Fill the available space.
    flex-grow: 1;

    // Allow the element to shrink.
    min-width: 0;

    // Fill the available height.
    height: 100%;
}

// --- LEGACY SUPPORT -----------------------------------------------------------------------------

react-module
{
    // Import legacy styles.
    @import "../legacy/packages/shared/src/webKit/LEGACY";
    // @import "../legacy/constants";

    // Ensure react modules fill the content area of the viewport.
    // We must use absoliute positioning to do this, due to the legacy styles.
    position: absolute;
    height: 100vh;

    width: calc(100vw - var(--size-app-sidebar-width-expanded));

    .sideMenu--collapsed &
    {
        width: calc(100vw - var(--size-app-sidebar-width));
        left: 0;
    }

    // Use vertical flex layout.
    display: flex;
    flex-direction: column;

    // Ensure react modules never overlap any app elements.
    // We can't set it to less than 1 though, as modal backdrops need to overlap
    // the top and bottom of the app-sidebar.
    z-index: 1;

    --font-label-base-line-height: 5rem;
    --font-label-base-font-size: 3.5rem;
    --font-label-base-margin-top: 3rem;
    --font-label-base-margin-bottom: 3rem;
    --font-label-base-font-weight: 500;

    /// Text style for base text.
    /// Use for base-sized labels, such as the text on buttons or tabs.
    .font-label-base {
        line-height: var(--font-label-base-line-height);
        font-size: var(--font-label-base-font-size);
        font-weight: var(--font-label-base-font-weight);

        // Define the current text margins.
        --font-current-margin-top: var(--font-label-base-margin-top);
        --font-current-margin-bottom: var(--font-label-base-margin-bottom);

        .margin-within & {
            margin-top: var(--font-current-margin-top);
            margin-bottom: var(--font-current-margin-bottom);
        }
    }

    --font-label-small-line-height: 4rem;
    --font-label-small-font-size: 3rem;
    --font-label-small-margin-top: 2rem;
    --font-label-small-margin-bottom: 2rem;
    --font-label-small-font-weight: 600;

    /// Text style for small text.
    /// Use for small-sized labels, such as column headers in a table.
    .font-label-small {
        line-height: var(--font-label-small-line-height);
        font-size: var(--font-label-small-font-size);
        font-weight: var(--font-label-small-font-weight);

        // Define the current text margins.
        --font-current-margin-top: var(--font-label-small-margin-top);
        --font-current-margin-bottom: var(--font-label-small-margin-bottom);

        .margin-within & {
            margin-top: var(--font-current-margin-top);
            margin-bottom: var(--font-current-margin-bottom);
        }
    }

    .c-login-outerContainer,
    .c-activation-outerContainer
    {
        position: fixed;
        left: 0;
        right: 0;
    }

    // Change page header to better match the new pages.
    .pageHeader
    {
        padding: 8.5rem 9rem 0 9rem;
        border-bottom: var(--border-width-thin) solid var(--color-surface-border);

        --colorNeutralDark: var(--color-surface-neutral-surface);
        --colorInteractivePrimary: var(--color-surface-primary-text);

        .pageHeader-top
        {
            height: auto;
            margin-bottom: 5.5rem;

            .pageHeader-path,
            .pageHeader-path-segment
            {
                line-height: var(--font-largest-line-height);
                font-size: var(--font-largest-font-size);
                font-weight: var(--font-largest-font-weight);
                --font-current-margin-top: var(--font-largest-margin-top);
                --font-current-margin-bottom: var(--font-largest-margin-bottom);

                .icon
                {
                    margin-top: 1px;
                    font-size: 23px;
                }
            }
        }

        .pageHeader-toolbar:not(:empty)
        {
            margin-bottom: 7rem;
        }

        .pageHeader-tabs
        {
            border: var(--border-width-medium) solid var(--color-surface-neutral-border);
            border-radius: var(--border-radius-medium);

            .pageHeader-tabs-tab
            {
                line-height: calc(10rem - 2 * var(--border-width-medium));
                text-overflow: ellipsis;
                overflow: hidden;
                white-space: nowrap;

                &.active
                {
                    color: inherit;
                    background: var(--color-surface-neutral-surface)
                }
            }
        }
    }

    .inputContainer .inputWrapper input:not(.noBorder),
    .selectContainer .selectWrapper .react-selectize .react-selectize-control,
    .buttonContainer.moverButton.buttonLight,
    .c-checkboxContainer:not(.checked) .c-checkbox
    {
        &, &:hover, &:focus
        {
            border-color: var(--color-surface-input-border);
        }
    }

    .c-checkboxContainer.checked .c-checkbox
    {
        &, &:hover, &:focus
        {
            border-color: transparent;
        }
    }

    .c-divider :first-child, .c-divider :last-child
    {
        border-color: var(--color-surface-border);
    }

    .buttonContainer.moverButton .moverButtonText.font-label-base
    {
        font-weight: var(--font-label-base-font-weight)
    }

    .buttonContainer.moverButton .moverButtonText.font-label-small
    {
        font-weight: var(--font-label-small-font-weight)
    }
}

// --- TEMPORARY STYLES ---------------------------------------------------------------------------

:root
{
    // Default padding for cards.
    // TODO: Should we define variables for standard margin and padding instead?
    --card-padding: 3.5rem 3rem;
    --card-padding-large: 12.5rem 13rem;
}

path-nav > *:not(:last-child)::after, path-nav > a[accent="inherit"]:not(:last-child)::after
{
    mask-size: 1em;
}

// HACK: Adjust label styling to match the design - this should ideally be configurable using custom properties instead.
.input[label="above"] > .input-label
{
    margin-bottom: calc(var(--font-small-margin-bottom) / 2);

    .input-heading
    {
        opacity: var(--opacity-faded);
    }

    .input-description > *
    {
        margin-top: .5rem;
        margin-bottom: .5rem;
    }
}

page-section
{
    &:not(.--expanded)
    {
        margin-top: .5rem;
        margin-bottom: .5rem;
    }
}

page-section:not(.--expanded) + page-section.--expanded
{
    margin-top: .5rem;
}

.page-section-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
        display: none;
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) /2);

        // Set icon size and line height.
        line-height: 1;
        font-size: 1.286em;
    }
}

.modal-section-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) /2);

        // Set icon size and line height.
        line-height: 1;
        font-size: 1.286em;
    }
}

page-sidebar
{
    page-section:not(.--header-slot-empty) .page-section-header
    {
        margin: 0 -9rem 0 -9rem;
        padding: 2rem 5rem 2rem 9rem;
        width: auto;
        font-size: inherit;
        background: var(--palette-color-neutral-light) !important;
        color: var(--palette-color-neutral-dark);
    }

    .page-section-toggle
    {
        display: flex;
    }
}

.control-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing)
    }
}

.icon-row
{
    display: flex;
    line-height: 1;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-large)
    }
}

.link-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: calc(var(--size-inline-spacing-large) * 2)
    }
}

toolbar
{
    // Use a small default width for search inputs, and expand them when focused.
    search-input
    {
        --input-min-width: 0;
        width: 10vw;
        transition: width var(--animation-duration-long);

        // Delay transition so it's possible to click the clear icon within the input.
        transition-delay: 0.1s;

        &:focus-within,
        &:not(.--empty)
        {
            width: 80rem;
        }
    }

    // Use a small default width for search inputs, and expand them when focused.
    input[type="text"],
    input[type="search"]
    {
        width: 10vw;
        min-width: 30rem;
        max-width: 80rem;
        transition: width var(--animation-duration-long);

        // Delay transition so it's possible to click the clear icon within the input.
        transition-delay: 0.1s;

        &:focus,
        &:not(:placeholder-shown)
        {
            width: 80rem;
        }
    }

    select
    {
        width: auto;
        min-width: 30rem;
    }
}

data-table-cell icon + span
{
    margin-left: var(--size-inline-spacing);
}

@media ($media-smallest-max)
{
    app-sidebar.--expanded
    {
        width: 100vw !important;
    }
}

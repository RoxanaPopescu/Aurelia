@import "resources/index";

:root
{
    // Default padding for cards.
    // TODO: Should we define variables for standard margin and padding instead?
    --card-padding: 3.5rem 3rem;
    --card-padding-large: 12.5rem 13rem;
}

.--button-position-right
{
    position: absolute;
    align-self: center;
    right: 0;
}

.page-content-back-to-top
{
    right: 3rem !important;
}

.clickable
{
    cursor: pointer;
}

.image-thumbnail
{
    width: 23rem;
    height: 23rem;
    border: 7px solid var(--surface-neutral-surface-color);
    border-radius: 2rem;
    object-fit: cover;
    object-position: center;
}

app-sidebar
{
    section .nav-link icon,
    footer .nav-link icon.icon-sidebar-expand
    {
        margin: 0.5rem;
        font-size: 5rem;
    }
}

path-nav > *:not(:last-child)::after, path-nav > a[accent="inherit"]:not(:last-child)::after
{
    mask-size: 0.8334em;
    mask-position: center;
}

page-header tab-nav tab button
{
    min-width: 40rem !important;
    padding: 0 10rem !important;
}

page-content > name-value-list
{
    padding: 4.5rem 9rem 0 9rem;
    margin-bottom: -1.5rem;
}

page-content page-section
{
    &.--line-above
    {
        border-top: var(--border-width-thin) solid var(--surface-separator-color);
        margin-top: 8rem;
        padding-top: 6rem;
    }

    .page-section-header
    {
        font: var(--font-larger);
    }
}

modal-section
{
    &.--line-above
    {
        border-top: var(--border-width-thin) solid var(--surface-separator-color);
        margin-top: 8rem;
        padding-top: 6rem;
    }
}

page-sidebar .page-sidebar-edge-icon icon
{
    font-size: calc(var(--font-largest-font-size) * 0.8334);
}

modal-panel .modal-panel-content modal-header
{
    margin-bottom: 8rem;
}

// HACK: Adjust label styling to match the design - this should ideally be configurable using custom properties instead.
.input[label="above"] > .input-label
{
    margin-bottom: calc(var(--font-small-margin-bottom) / 2);

    .input-heading > *
    {
        margin-bottom: 0.5rem;
        opacity: var(--opacity-faded);
    }

    .input-description > *
    {
        margin-bottom: 0.5rem;
    }
}

button[appearance],
a[appearance]
{
    &:not([appearance="none"]):not([appearance="icon"])
    {
        min-width: 40rem;;
    }
}

select-button button[appearance]
{
    // HACK: Ensure select-button, which may be icon-only, is not too wide.
    min-width: 0 !important;
}

page-section
{
    &:not(.--expanded)
    {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
    }
}

.min-height-0
{
    min-height: 0;
}

.min-width-0
{
    min-width: 0;
}

page-section:not(.--expanded) + page-section.--expanded
{
    margin-top: 0.5rem;
}

.page-section-header-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
        display: none;
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) / 2);

        // Set icon size and line height.
        line-height: 1;
        font-size: 1.286em;
    }
}

.modal-section-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) /2);

        // Set icon size and line height.
        line-height: 1;
        font-size: 1.286em;
    }
}

page-sidebar
{
    page-section:not(.--header-slot-empty) .page-section-header
    {
        margin: 0 -9rem 0 -9rem;
        padding: 2rem 8rem 2rem 9rem;
        width: auto;
        font-size: inherit;
        background: var(--palette-color-neutral-light) !important;
        color: var(--palette-color-neutral-dark);
    }

    .page-section-header-toggle
    {
        display: flex;
    }

    > page-section
    {
        &:first-of-type:not(.--header-slot-empty)
        {
            margin-top: 0;
        }
    }
}

.control-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }
}

.button-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }
}

.icon-row
{
    display: flex;
    line-height: 1;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }
}

.icon-column
{
    display: flex;
    flex-direction: column;
    line-height: 1;

    > :not(:last-child)
    {
        margin-bottom: var(--size-inline-spacing-larger);
    }
}

.link-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: calc(var(--size-inline-spacing-large) * 2);
    }
}

toolbar
{
    & > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-large);
    }

    // Use a small default width for search inputs, and expand them when focused.
    search-input
    {
        --input-min-width: 0;
        width: 10vw;
        transition: width var(--animation-duration-long);

        // Delay transition so it's possible to click the clear icon within the input.
        transition-delay: 0.1s;

        &:focus-within,
        &:not(.--empty)
        {
            width: 80rem;
        }
    }
}

tags-input.--tags-only
{
    text-input
    {
        --input-min-height: 0;
        --input-border-width: 0 !important;
        --input-border-color: transparent !important;
        --input-surface-color: transparent !important;
        --input-padding: 0 !important;
    }

    tag
    {
        --tag-background-color: var(--surface-neutral-surface-color) !important;
        --tag-border-color: var(--surface-neutral-border-color) !important;
    }

    [slot="value"]
    {
        padding-left: 0 !important;
    }

    .input-control
    {
        padding-right: 0 !important;
    }

    .input-control-inner
    {
        display: none !important;
    }
}

data-table.--reduce-header-whitespace
{
    margin-top: -3rem;
}

data-table-cell icon + span
{
    margin-left: var(--size-inline-spacing);
}

@media ($media-smallest-max)
{
    app-sidebar.--expanded
    {
        width: 100vw !important;
    }
}

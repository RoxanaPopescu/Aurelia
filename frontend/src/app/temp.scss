@import "resources/index";

/*
button[appearance="outline"][accent="primary"]
{
    // HACK: Test how it would look, if we change the style of all outline-primary buttons to solid-neutral.
    border-color: transparent;
    background-color: var(--surface-neutral-surface-color);
    color: var(--surface-neutral-surface-text-color);
}
*/

page-content,
modal-content
{
    // HACK: Without this, scrollbars in Chrome on macOS do not have the correct color.
    background-color: var(--surface-color);
}

.input-heading > *,
.input-description > *,
.toggle-heading > *,
.toggle-description > *,
.input-heading-like
{
    color: var(--temp-label-color, inherit);

    info-icon
    {
        color: var(--surface-info-text-color);
    }
}

:root
{
    --card-padding: 16rem 14rem;
    --card-padding-large: 50rem 52rem;
}

body
{
    --toggle-height: 2em;
    --page-sidebar-min-width: 384rem;
    --page-sidebar-max-width: 384rem;

    // The colors to use for map features.
    --google-map-feature-color--neutral: #808080; // var(--palette-color-neutral-dark);
    --google-map-feature-color--primary: var(--palette-color-primary);
    --google-map-feature-color--info: var(--palette-color-info);
    --google-map-feature-color--positive: var(--palette-color-positive);
    --google-map-feature-color--attention: var(--palette-color-attention);
    --google-map-feature-color--negative: var(--palette-color-negative);
}

body identity-picture
{
    background: var(--surface-neutral-surface-color);
    color: var(--surface-neutral-surface-text-color);
}

.info-card-action
{
    font-weight: 500;
    color: var(--surface-primary-text-color);
}

.--button-position-right
{
    position: absolute;
    align-self: center;
    right: 0;
}

.page-content-back-to-top
{
    right: 12rem !important;
}

.clickable
{
    cursor: pointer;
}

.image-thumbnail
{
    width: 92rem;
    height: 92rem;
    border: 7px solid var(--surface-neutral-surface-color);
    border-radius: 8rem;
    object-fit: cover;
    object-position: center;
}

app-sidebar
{
    section .nav-link icon,
    footer .nav-link icon.icon-sidebar-expand
    {
        margin: 2rem;
        font-size: 20rem;
    }
}

path-nav > *:not(:last-child)::after, path-nav > a[accent="inherit"]:not(:last-child)::after
{
    mask-size: 0.8334em;
    mask-position: center;
}

page-header
{
    // Preven z-order bugs when the header fades out on scroll.
    z-index: 3;
}

page-header tab-nav tab button
{
    min-width: 160rem !important;
    padding: 0 40rem !important;
}

page-content > name-value-list
{
    padding: 18rem 36rem 0 36rem;
    margin-bottom: -6rem;
}

page-content page-section
{
    &.--line-above
    {
        border-top: var(--border-width-thin) solid var(--surface-separator-color);
        margin-top: 32rem;
        padding-top: 24rem;
    }

    .page-section-header
    {
        font: var(--font-larger);
    }
}

page-content > numbered-section
{
    margin-left: 36rem;
    margin-right: 36rem;

    &:first-of-type
    {
        margin-top: 32rem;
    }

    &:last-of-type
    {
        margin-bottom: 32rem;
    }
}

modal-section
{
    &.--line-above
    {
        border-top: var(--border-width-thin) solid var(--surface-separator-color);
        margin-top: 32rem;
        padding-top: 24rem;
    }
}

page-sidebar .page-sidebar-edge-icon icon
{
    font-size: calc(var(--font-largest-font-size) * 0.8334);
}

modal-panel .modal-panel-content modal-header
{
    margin-bottom: 32rem;
}

// HACK: Adjust label styling to match the design - this should ideally be configurable using custom properties instead.
.input[label="above"] > .input-label
{
    margin-bottom: calc(var(--font-small-margin-bottom) / 2);

    .input-heading > *
    {
        margin-bottom: 2rem;
    }

    .input-description > *
    {
        margin-top: 4rem;
        margin-bottom: 4rem;
    }
}

select-button button[appearance]
{
    // HACK: Ensure select-button, which may be icon-only, is not too wide.
    min-width: 0 !important;
}

page-section
{
    &:not(.--expanded)
    {
        margin-top: 2rem;
        margin-bottom: 2rem;
    }
}

.min-height-0
{
    min-height: 0;
}

.min-width-0
{
    min-width: 0;
}

page-section:not(.--expanded) + page-section.--expanded
{
    margin-top: 2rem;
}

.page-section-header-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
        display: none;
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) / 2);

        // Set icon size and line height.
        line-height: 1;
        font-size: 1.286em;
    }
}

.modal-section-toggle
{
    > span
    {
        line-height: var(--font-base-line-height);
    }

    > icon
    {
        margin-left: calc(var(--size-inline-spacing) /2);
        line-height: 1;
        font-size: 1.286em;
    }
}

page-sidebar
{
    page-section:not(.--header-slot-empty) .page-section-header
    {
        margin: 0 -36rem 0 -36rem;
        padding: 8rem 32rem 8rem 36rem;
        width: auto;
        font-size: inherit;
        background: var(--palette-color-neutral-light) !important;
        color: var(--palette-color-neutral-dark);
    }

    .page-section-header-toggle
    {
        display: flex;
    }

    > page-section
    {
        &:first-of-type:not(.--header-slot-empty)
        {
            margin-top: 0;
        }
    }
}

.split-button
{
    display: flex;

    > :first-child
    {
        border-right: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    > :last-child
    {
        position: relative;
        margin-left: var(--border-width-medium);
        border-left: 0;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        min-width: 0;
        overflow: visible;

        &::before
        {
            content: "";
            position: absolute;
            top: calc(var(--border-width-medium) * -1);
            left: calc(var(--border-width-medium) * -1);
            bottom: calc(var(--border-width-medium) * -1);
            width: var(--border-width-medium);
            background: inherit;
            opacity: var(--opacity-faded);
        }
    }
}

.input select-input[slot="after"]
{
    margin: calc(-1 * var(--input-border-width));
    border-left: var(--input-border-width) solid var(--surface-color);

    .input-input
    {
        text-align: right;
    }
}

.control-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }

    > .input-heading-like
    {
        border-width: var(--input-border-width) solid transparent;
        padding: var(--input-padding);
        padding-left: 0;
        padding-right: 0;
        white-space: nowrap;
    }
}

.button-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }
}

.google-map-actions
{
    display: flex;
    padding: 10px;
    pointer-events: none;

    > *
    {
        pointer-events: all;
    }

    button
    {
        border-width: 0;
        font: var(--font-base);
        font-size: var(--font-base-font-size);
        font-weight: var(--google-map-control-font-weight);
        background: var(--google-map-control-surface-color);
        color: var(--google-map-control-surface-text-color) !important;
        box-shadow: var(--google-map-control-shadow);
        filter: var(--google-map-control-filter);

        &:hover
        {
            background: #ebebeb;
        }

        &.--active
        {
            font-weight: var(--google-map-control-font-weight--active);
            color: var(--google-map-control-surface-text-color--active);
        }

        &:not(:last-child)
        {
            margin-right: 10px;
        }
    }
}

.icon-row
{
    display: flex;
    line-height: 1;

    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-larger);
    }
}

.icon-column
{
    display: flex;
    flex-direction: column;
    line-height: 1;

    > :not(:last-child)
    {
        margin-bottom: var(--size-inline-spacing-larger);
    }
}

.link-row
{
    display: flex;

    > :not(:last-child)
    {
        margin-right: calc(var(--size-inline-spacing-large) * 2);
    }
}

toolbar
{
    > :not(:last-child)
    {
        margin-right: var(--size-inline-spacing-large);
    }

    search-input
    {
        width: 320rem;
    }

    // EXPERIMENT: Reduce the width of the search input when empty and not focused.
    &.DISABLED
    {
        // Use a small default width for search inputs, and expand them when focused.
        search-input
        {
            // Reduce width when empty and not focused.
            --input-min-width: 10vw;
            --input-max-width: 100%;
            width: 10vw;

            // Animate width changes.
            transition: width 0.3s cubic-bezier(0.15, 1, 0.3, 1) 0s;

            .input-control
            {
                // Animate color changes.
                transition:
                    background-color 0.2s ease-in-out 0s,
                    border-color 0.2s ease-in-out 0s !important;
            }

            &:focus-within,
            &:not(.--empty)
            {
                // Expand the input when focused or not empty.
                width: 320rem;
            }

            &:not(:focus-within)
            {
                // Delay the animation of width changes, so a click on the filter futton won't be missed.
                transition-delay: 0.1s;
            }
        }
    }

    // EXPERIMENT: Hide background and border when no filters are applied.
    &.DISABLED
    {
        .list-view-filters-button:not(.--active)
        {
            background: none !important;
            border-color: transparent !important;
        }
    }

    // EXPERIMENT: Highlight find input and filter button with primary color when applied.
    &.DISABLED
    {
        search-input:not(.--empty)
        {
            // Highlight the content of the input when not empty.
            --input-surface-text-color: var(--surface-primary-text-color) !important;
            --input-surface-text-color--hover: var(--input-surface-text-color) !important;
            --input-surface-text-color--focus: var(--input-surface-text-color) !important;

            [slot="before"] icon,
            [slot="after"] icon
            {
                // Highlight the icons in the input when not empty.
                color: var(--surface-primary-icon-color) !important;
            }
        }

        .list-view-filters-button.--active
        {
            > *
            {
                color: var(--surface-primary-text-color) !important;
            }
        }
    }

    // EXPERIMENT: Highlight find input and filter button with primary border when applied.
    &.DISABLED
    {
        search-input:not(.--empty)
        {
            // Highlight the input when not empty.
            --input-padding: calc(9rem - (var(--border-width-medium) - var(--border-width-thin))) 12rem;
            --input-border-width: var(--border-width-medium);
            --input-border-color: var(--surface-primary-border-color);
            --input-border-color--hover: var(--surface-primary-border-color);
            --input-border-color--focus: var(--surface-primary-border-color);
        }

        .list-view-filters-button.--active
        {
            --input-border-width: var(--border-width-medium);

            // Animate color changes.
            transition:
                color var(--animation-duration-short) ease,
                border-color var(--animation-duration-short) ease;

            // Highlight the button when filters are applied.
            border-color: var(--surface-primary-border-color) !important;
        }
    }
}

tags-input.--tags-only
{
    text-input
    {
        --input-min-height: 0;
        --input-border-width: 0 !important;
        --input-border-color: transparent !important;
        --input-surface-color: transparent !important;
        --input-padding: 0 !important;
    }

    tag
    {
        --tag-surface-color: var(--surface-neutral-surface-color) !important;
        --tag-border-color: var(--surface-neutral-border-color) !important;
    }

    [slot="value"]
    {
        padding-left: 0 !important;
    }

    .input-control
    {
        padding-right: 0 !important;
    }

    .input-control-inner
    {
        display: none !important;
    }
}

tag.--with-count
{
    padding: 0;

    > *
    {
        padding: var(--tag-padding);
    }

    > :first-child
    {
        border-right: var(--tag-border-width) solid var(--tag-border-color);
    }
}

data-table.--reduce-header-whitespace
{
    margin-top: -12rem;
}

data-table-cell icon + span
{
    margin-left: var(--size-inline-spacing);
}

@media ($media-smallest-max)
{
    app-sidebar.--expanded
    {
        width: 100vw !important;
    }
}

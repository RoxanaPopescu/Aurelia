@import "resources/index";

card
{
    // Use horizontal flex layout.
    display: flex;

    // Allow content to be positioned relative to this element.
    position: relative;

    // Apply the card size set by the layout.
    width: var(--card-width, auto);
    min-height: var(--card-height, auto);

    &[accent]
    {
        // Ensure the accent only affects the edge, and not the content.
        color: inherit;

        &:not([accent="none"])
        {
            padding-left: var(--border-width-thick);

            > a
            {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                border-left-width: 0;
            }
        }
    }

    // Add accent color support.
    @each $accent in $accents
    {
        &[accent="#{$accent}"] > a > .card-edge
        {
            // Apply the background color specified by the accent attribute.
            background: var(--palette-color-#{$accent});
        }
    }

    // Add support for the 'none' accent.
    &[accent="none"] > a > .card-edge
    {
        // Apply transparent background color.
        background: transparent;
    }

    &.--disabled
    {
        opacity: var(--opacity-disabled);
    }

    &.--active > a
    {
        background: var(--surface-color--active);
        border-color: var(--border-color--active);
    }

    &.--non-clickable > a
    {
        cursor: default;
    }

    &:not(.--active):not(.--non-clickable) > a
    {
        &:hover
        {
            border-color: var(--border-color--hover);
            background: var(--surface-color--hover);
        }

        &:focus
        {
            border-color: var(--border-color--focus);
            background: var(--surface-color--focus);
        }
    }

    > a
    {
        // Fill the available space.
        flex-grow: 1;

        // Allow the element to shrink.
        min-width: 0;

        // Use vertical flex layout.
        display: flex;
        flex-direction: column;

        // Apply default card padding.
        padding: var(--card-padding);

        // Apply border.
        border: var(--border-width-thin) solid;
        border-radius: var(--border-radius-medium);

        // Apply surface style.
        border-color: var(--border-color);
        background: var(--surface-color);
        color: var(--surface-text-color);

        > .card-edge
        {
            // Position along the left edge of the card.
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;

            // Set the width of the edge.
            width: var(--border-width-thick);

            // Set the border radius to match that of the card.
            border-top-left-radius: var(--border-radius-medium);
            border-bottom-left-radius: var(--border-radius-medium);
        }

        > footer
        {
            // Push the footer to the bottom by default.
            margin-top: auto;
        }

        > [slot="actions"]
        {
            // Position the action container along the right edge of the card.
            position: absolute;
            top: 12rem;
            right: 12rem;
            bottom: 12rem;

            // Disable pointer events so the container does not block clicks.
            pointer-events: none;

            icon
            {
                // Set the icon size.
                font-size: var(--font-larger-font-size);
            }

            > *,
            {
                // Enable pointer events for each action.
                pointer-events: all;

                // Provide vertical layout for items.
                display: block;
                margin-bottom: 8rem;

                // Fade the items so they are barely visible.
                opacity: var(--opacity-faded-more);

                // Apply surface style.
                color: var(--surface-neutral-icon-color);

                &:not(:disabled):hover,
                body.focus-visible &:not(:disabled):focus
                {
                    // Highlight when hovered or focused.
                    opacity: var(--opacity-faded-more);

                    // Apply surface style.
                    color: var(--surface-icon-color--hover);
                }

                &.--active
                {
                    &:not(:disabled)
                    {
                        // Highlight when active.
                        opacity: var(--opacity-faded-less);
                    }

                    // Apply surface style.
                    color: var(--surface-icon-color--active);
                }
            }
        }
    }
}

card.--animate > a
{
    // Animate color changes.
    transition:
        background-color var(--animation-duration-medium),
        border-color var(--animation-duration-medium),
        color var(--animation-duration-medium);

    > .card-edge
    {
        // Animate color changes.
        transition: background-color var(--animation-duration-medium);
    }
}

:root
{
    // The gap between items in the grid.
    --date-picker-item-gap: 1rem;

    // The padding of the component.
    --date-picker-padding: 4rem;

    // The default width of the component.
    --date-picker-width: 84.5rem;
}

date-picker
{
    display: block;

    // Apply padding.
    padding: var(--date-picker-padding);

    // Set the default width.
    width: var(--date-picker-width);

    // Limit to the width of the container.
    max-width: 100%;

    &.--view-dates
    {
        // Use 7 columns for the dates view.
        --date-picker-columns: 7;
        --date-picker-row-gap: var(--date-picker-item-gap);
        --date-picker-column-gap: var(--date-picker-item-gap);
    }

    &.--view-months,
    &.--view-years
    {
        // Calculate the height of the dates view.
        --date-picker-item-size-small: calc((100% - 6 * var(--date-picker-item-gap)) / 7);
        --date-picker-dates-view-height: calc(7 * var(--date-picker-item-size-small) + 6 * var(--date-picker-item-gap));

        // Calculate the column gap for the other views, so they match the height of the dates view.
        --date-picker-item-size-large: calc((var(--date-picker-dates-view-height) - 3 * var(--date-picker-item-gap)) / 4);
        --date-picker-column-gap-large: calc((100% - 3 * var(--date-picker-item-size-large)) / 2);

        // Use 4 columns for the months and years view.
        --date-picker-columns: 3;
        --date-picker-row-gap: var(--date-picker-item-gap);
        --date-picker-column-gap: var(--date-picker-column-gap-large);
    }

    .date-picker-header,
    .date-picker-weekdays
    {
        // Use grid layout to create 7 columns, one for each weekday.
        display: grid;
        grid-template-columns: repeat(7, 1fr);

        // Apply spacing between cells.
        row-gap: var(--date-picker-row-gap);
        column-gap: var(--date-picker-item-gap);
    }

    .date-picker-header
    {
        // Center content to ensure alignment with grid columns.
        justify-content: center;
        align-items: center;

        // Apply spacing between the header and the weekdays.
        margin-bottom: 0.5rem;

        > div
        {
            // Position the div containing the title so it spans the middle columns.
            grid-column: 2 / span 5;

            // Center the title horizontally.
            display: flex;
            justify-content: center;
            align-items: center;
        }
    }

    .date-picker-weekdays
    {
        // Add bottom margin to compensate for the missing row gap.
        margin-bottom: var(--date-picker-row-gap);

        > ::before
        {
            // Hack to ensure the height matches the width.
            content: "";
            display: block;
            padding-top: 100%;
        }
    }

    .date-picker-items
    {
        // Use grid layout to present the items.
        display: grid;
        grid-template-columns: repeat(var(--date-picker-columns), 1fr);

        // Apply spacing between cells.
        row-gap: var(--date-picker-row-gap);
        column-gap: var(--date-picker-column-gap);

        > *
        {
            &.--today
            {
                // Apply outline style to highlight today.
                color: var(--color-surface-primary-text) !important;
                border-color: var(--color-surface-primary-border) !important;
            }

            &.--selected
            {
                // Apply solid style to highlight the selected item.
                background: var(--color-surface-primary-surface) !important;
                color: var(--color-surface-primary-surface-text) !important;
                border-color: var(--color-surface-primary-border) !important;
            }

            &:not(.--selected)
            {
                &.--outside-range
                {
                    // Fade items that are outside the range.
                    opacity: calc(var(--opacity-faded) / 6);
                }

                &.--disabled
                {
                    // Fade items that are disabled more than items outside the range.
                    opacity: calc(var(--opacity-disabled) / 6);

                    // Add a diagonal line to indicate that the item is unavailable.
                    &::after
                    {
                        content: "";

                        position: absolute;
                        top: 20%;
                        left: auto;
                        right: auto;
                        bottom: 20%;
                        width: 2px;
                        background: currentColor;
                        transform: rotate(45deg);
                    }
                }
            }
        }
    }

    .date-picker-weekdays,
    .date-picker-items
    {
        > *
        {
            position: relative;

            // Use flex layout to center content.
            display: flex;
            justify-content: center;
            align-items: center;
        }
    }

    &.--view-dates .date-picker-items
    {
        // Allow content to be positioned relative to this element.
        position: relative;

        > :nth-last-child(2),
        > :nth-last-child(1)
        {
            // Hide the last two dates, to make room for the `Today` button.
            display: none;
        }
    }

    &:not(.--hoverable) .date-picker-items button[appearance="icon"]:hover
    {
        // Override the hover style for the buttons to prevent hover effects while in keyboard mode.
        color: var(--color-surface-neutral-text);
        border-color: transparent;
        background: transparent;
    }

    .date-picker-today
    {
        // Position at the bottom right corner of the grid.
        position: absolute;
        right: 0;
        bottom: 0;

        // TODO: Should we enable this?
        // Set the width of the button, so it spans two columns.
        // --date-picker-item-size-small: calc((100% - 6 * var(--date-picker-item-gap)) / 7);
        // width: calc(2 * var(--date-picker-item-size-small) + var(--date-picker-item-gap));

        // Reduce padding to align with column content.
        padding: 0 2.5rem !important;

        // Shrink to match the row height.
        min-height: 0 !important;

        // Match the height of the grid rows.
        height: calc((100% - 5 * var(--date-picker-row-gap)) / 6);
    }

    .date-picker-weekdays,
    .date-picker-today button
    {
        // Use a slightly heavier font weight.
        font-size: var(--font-small-font-size);
        opacity: var(--opacity-faded);
    }
}

@import "resources/index";

modal-panel
{
    // Allow content to be positioned relative to this element.
    position: relative;

    // Apply the z-index for modals.
    z-index: var(--z-index-modal);

    // Limit the size of the panel.
    min-width: var(--modal-panel-min-width);
    max-width: var(--modal-panel-max-width);

    // Apply a border to the panel.
    border-radius: var(--border-radius-large);
    margin: var(--modal-panel-margin);

    // Apply surface style.
    background: var(--color-surface);
    color: var(--color-surface-text);

    // Apply a shadow to the panel.
    box-shadow: var(--modal-shadow);

    &.--busy
    {
        > *
        {
            // Make content appear disabled while busy.
            opacity: var(--opacity-disabled) !important;
        }
    }

    .modal-panel-content
    {
        // Position at the top and allow content to
        // be positioned relative to this element.
        position: absolute;
        top: 0;

        // Set the size of the content area.
        width: 100%;
        min-height: 100%;

        // Use vertical flex layout.
        display: flex;
        flex-direction: column;

        // Apply padding.
        padding: 9rem 9rem 9rem var(--modal-panel-actions-width);

        // Provide defaults for sectioning elements.

        > header,
        > section,
        > footer
        {
            // Prevent shrinking by default.
            flex-shrink: 0;
        }

        > header
        {
            // Apply default margin.
            margin-bottom: 9rem;
        }

        > footer
        {
            // Push the footer to the bottom by default.
            margin-top: auto;
        }
    }

    .modal-panel-actions
    {
        // Keep the actions in place when panel is scrolled.
        position: sticky;
        top: 0;

        // Set the size of the action area.
        width: var(--modal-panel-actions-width);
        min-height: 100%;

        // Use vertical flex layout.
        display: flex;
        flex-direction: column;

        // Center items horizontally.
        align-items: center;

        // Apply padding.
        padding: 7.5rem 5rem;

        > *
        {
            // Provide default item spacing.
            margin-bottom: 3rem;
        }

        button[appearance="icon"]
        {
            // Provide default icon size.
            font-size: 6rem;
        }
    }
}

// Animate the panel.

modal-panel
{
    // The transform to apply to the panel before it enters and after it leaves.
    --modal-panel-origin-transform: translateX(calc(-100% + var(--size-app-sidebar-width) * 0.5));

    // Hint that animation will be applied.
    will-change: opacity, transform, filter;

    modal-view compose.au-enter &
    {
        transform: var(--modal-panel-origin-transform);
        opacity: 0;
        overflow: hidden;
    }

    modal-view compose.au-enter-active &
    {
        animation: modal-panel-enter cubic-bezier(0.2, 0, 0.1, 1) var(--animation-duration-medium);

        // HACK: This is needed to avoid a bug in Safari, which apparently causes the animation to start before
        // the width of the element has been calculated, thus causing an incorrect transform to be applied.
        // We work around this by delaying the animation, so it starts after the width has been calculated.
        animation-delay: 10ms;

        // Prevent glitches at the ends of the animation.
        animation-fill-mode: both;
    }

    modal-view compose.au-leave &
    {
        // Replace the shadow with an afterglow to smoothe the edge and reduce ghosting.
        box-shadow: var(--modal-panel-afterglow);
    }

    modal-view compose.au-leave-active &
    {
        animation: modal-panel-leave cubic-bezier(0.2, 0, 0.2, 0.5) var(--animation-duration-medium);

        // Prevent glitches at the ends of the animation.
        animation-fill-mode: both;
    }
}

@keyframes modal-panel-enter
{
    30%
    {
        opacity: 1;
    }

    50%, to
    {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes modal-panel-leave
{
    40%
    {
        opacity: 1;
    }

    100%
    {
        transform: var(--modal-panel-origin-transform);
        opacity: 0;
    }
}

// Animate the content of the panel.

modal-panel > *
{
    // Hint that animation will be applied.
    will-change: opacity;

    // Prevent glitches at the ends of the animation.
    animation-fill-mode: both !important;

    modal-view compose.au-enter &
    {
        opacity: 0;
    }

    modal-view compose.au-enter-active &
    {
        animation: modal-panel-content-enter cubic-bezier(0.2, 0, 0, 1) var(--animation-duration-medium);
    }

    modal-view compose.au-leave-active &
    {
        animation: modal-panel-content-leave cubic-bezier(0.2, 0, 0, 1) var(--animation-duration-medium);
    }
}

@keyframes modal-panel-content-enter
{
    100%
    {
        opacity: 1;
    }
}

@keyframes modal-panel-content-leave
{
    50%
    {
        opacity: 0.1;
    }

    100%
    {
        opacity: 0;
    }
}

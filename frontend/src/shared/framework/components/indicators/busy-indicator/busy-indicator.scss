busy-indicator
{
    --busy-indicator-max-width: 100%;
    --busy-indicator-max-height: 100%;
    --busy-indicator-stroke-width: 10rem;
    --busy-indicator-color: currentColor;
    --busy-indicator-opacity: 0.05;

    // HACK:
    // The new `busy-indicator` needs slightly different settings,
    // in order to match the style of the old.
    // Therefore, to avoid a breaking change, we override the
    // default styles here.

    --busy-indicator-max-width: min(25vh, 100%);
    --busy-indicator-max-width: min(25vh, 100%);
    --busy-indicator-stroke-width: 4rem;

    // HACK:
    // The new `busy-indicator` needs to be wrapped in a container,
    // in order to match the positioning of the old.
    // Therefore, to avoid a breaking change, we make the component
    // itself the container, with a div inside.

    display: flex;
    align-items: center;
    justify-content: center;
}

.busy-indicator
{
    display: block;

    // Allow content to be positioned relative to this element.
    position: relative;

    // Set the max-width and max-height.
    max-width: var(--busy-indicator-max-width);
    max-height: var(--busy-indicator-max-height);

    // Set the color.
    color: var(--busy-indicator-color);

    // Set the opacity.
    opacity: var(--busy-indicator-opacity);

    // Prevent the line-height from affecting the height.
    line-height: 0;

    svg
    {
        // Fill the available space.
        width: 100%;
        height: 100%;

        // Apply padding to compensate for the stroke width.
        padding: calc(var(--busy-indicator-stroke-width) / 4);

        // Allow overflow, as the stroke will otherwise be clipped.
        overflow: visible;

        // Animate the element, so it slowly rotates.
        animation: busy-indicator-svg-animation linear infinite;
        animation-duration: 2s;

        @keyframes busy-indicator-svg-animation
        {
            0%
            {
                transform: rotateZ(0deg);
            }

            100%
            {
                transform: rotateZ(360deg);
            }
        }
    }

    circle
    {
        // Animate the element.
        animation: busy-indicator-circle-animation ease-in-out infinite both;
        animation-duration: 1.4s;

        // Remove the fill collor.
        fill: transparent;

        // Apply the stroke style.
        stroke: currentColor;
        stroke-linecap: round;
        stroke-dasharray: 283;
        stroke-dashoffset: 280;
        stroke-width: var(--busy-indicator-stroke-width);

        // Transform the element so it can be rotated around its center.
        transform-origin: 50% 50%;

        @keyframes busy-indicator-circle-animation
        {
            // Start with short dash for 25% of animation.
            0%, 25%
            {
                stroke-dashoffset: 280;
                transform: rotate(0);
            }

            // Very long dash, slightly rotated for 25% of animation.
            // This is the head of the stroke getting away from the tail.
            50%, 75%
            {
                stroke-dashoffset: 75;
                transform: rotate(45deg);
            }

            // Back to short dash, rotated back to starting position.
            // This is the tail of the stroke catching up to the head.
            // The stroke moves backwards while at the same time the entire
            // circle is rotated forward to return to its starting position.
            100%
            {
                stroke-dashoffset: 280;
                transform: rotate(360deg);
            }
        }
    }

    .busy-indicator-content
    {
        // Fill the container.
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;

        // Center the content.
        display: flex;
        align-items: center;
        justify-content: center;
    }
}

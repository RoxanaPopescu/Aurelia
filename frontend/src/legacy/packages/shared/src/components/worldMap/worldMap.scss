@import "shared/src/webKit/constants.scss";

.c-worldMap {
  position: relative;
  height: 100%;
  background: var(--colorNeutralExtraLight);

  // Fix font inheritance.
  .gm-style {
    font-family: inherit;
  }

  // Fix excessively large font size in controls.
  .gm-style-mtc * {
    font-size: 14px !important;
    color: #333 !important;
  }

  > div > div > .gm-style
  {
    > div[style*="border:"]
    {
      border: none !important;
      transition: border 0s;
    }
  }
}




@import "resources/index";

.react-component
{
    // The surface color to show, while tiles are loading.
    --google-map-surface-color: var(--surface-color);

    // The filter to apply to map controls, if any.
    --google-map-control-filter: "none";

    // The shadow to apply to map controls, if any.
    --google-map-control-shadow: var(--shadow-float);

    // The colors to use for controls.
    --google-map-control-surface-text-color: var(--surface-neutral-surface-text-color);
    --google-map-control-surface-text-color--active: var(--google-map-control-surface-text-color);

    // The font weight to use for text on a control surface.
    --google-map-control-font-weight: 500;
    --google-map-control-font-weight--active: 700;

    // Ensure the map content is positioned within the safe area of the viewport.
    --google-map-inset-top: env(safe-area-inset-top);
    --google-map-inset-left: env(safe-area-inset-left);
    --google-map-inset-right: env(safe-area-inset-right);
    --google-map-inset-bottom: env(safe-area-inset-bottom);

    // The style to use for popovers.
    --google-map-popover-surface-color: var(--surface-color);
    --google-map-popover-surface-text-color: var(--surface-text-color);
    --google-map-popover-surface-text-color: var(--surface-text-color);
    --google-map-popover-border-width: 1px;
    --google-map-popover-border-color: rgba(92, 92, 92, 0.3);
    --google-map-popover-close-filter: invert(0.2);
    --google-map-popover-shadow: 0 2px 7px 1px rgba(0, 0, 0, 0.3);
    --google-map-popover-arrow-shadow: -2px 2px 4px 0 rgba(0, 0, 0, 0.2);
}

// HACK: Apply fixes and custom styles to internal elements.

.routeDetails-map-buttons,
.c-liveTracking-map-buttons,
.orderDetails-map-buttons,
.express-route-map-buttons
{
    .moverButton:not(.--active)
    {
        box-shadow: var(--google-map-control-shadow) !important;
        filter: var(--google-map-control-filter) !important;
    }
}

.c-worldMap
{
    // Show focus indicator during keyboard navigation or when an element
    // was programmatically focused - unless it has explicitly opted out.

    :focus
    {
        outline-offset: var(--accessibility-focus-outline-offset);
        outline-width: var(--accessibility-focus-outline-width);
        outline-style: var(--accessibility-focus-outline-style);
        outline-color: var(--accessibility-focus-outline-color);
        transition: outline 0s;

        @include if-focus-hidden
        {
            outline: none !important;
        }
    }

    > div > div > .gm-style
    {
        // Apply the inset, if specified.

        top: var(--google-map-inset-top, 0) !important;
        left: var(--google-map-inset-left, 0) !important;
        height: calc(100% - var(--google-map-inset-top, 0) - var(--google-map-inset-bottom, 0)) !important;
        width: calc(100% - var(--google-map-inset-left, 0) - var(--google-map-inset-right, 0)) !important;

        > [aria-roledescription="map"],
        > div[style*="border:"]
        {
            top: calc(-1 * var(--google-map-inset-top, 0)) !important;
            left: calc(-1 * var(--google-map-inset-left, 0)) !important;
            height: calc(100% + var(--google-map-inset-top, 0) + var(--google-map-inset-bottom, 0)) !important;
            width: calc(100% + var(--google-map-inset-left, 0) + var(--google-map-inset-right, 0)) !important;
        }

        // Apply the surface color to show, while tiles are loading.

        > [aria-roledescription="map"]
        {
            background-color: var(--google-map-surface-color);
        }

        // Show focus indicator during keyboard navigation or when the map
        // was programmatically focused - unless it has explicitly opted out.

        > div[style*="border:"]
        {
            border-width: var(--accessibility-focus-outline-width) !important;
            border-style: var(--accessibility-focus-outline-style) !important;
            border-color: var(--accessibility-focus-outline-color) !important;
            transition: border 0s;

            @include if-focus-hidden
            {
                border: none !important;
            }
        }

        // Hide unwanted map content.

        .gm-style-cc,
        a[href^="https://maps.google.com"]
        {
            display: none !important;
        }

        .gm-fullscreen-control
        {
            display: none !important;
        }

        // Use base font for controls.

        label,
        button,
        [role="button"],
        [role="menuitemcheckbox"]
        {
            font: var(--font-base) !important;
            font-size: var(--font-base-font-size) !important;
            font-weight: var(--google-map-control-font-weight) !important;
            color: var(--google-map-control-surface-text-color) !important;

            &[aria-pressed="true"]
            {
                font-weight: var(--google-map-control-font-weight--active) !important;
                color: var(--google-map-control-surface-text-color--active) !important;
            }
        }

        // Remove unwanted control styles.

        .gm-style-mtc *,
        .gm-bundled-control *,
        .gm-fullscreen-control *
        {
            box-shadow: none !important;

            &[style*="box-shadow:"]
            {
                box-shadow: var(--google-map-control-shadow) !important;
            }
        }

        // Apply filter to controls, if specified.

        .gmnoprint
        {
            filter: var(--google-map-control-filter);

            .gmnoprint
            {
                filter: none;
            }
        }

        // Improve styling of the map type control.

        .gm-style-mtc
        {
            &:not(:hover):not(:focus-within)
            {
                z-index: unset !important;
            }

            > button
            {
                &[aria-pressed="true"]
                {
                    z-index: 1 !important;
                }

                &[aria-pressed="false"]
                {
                    z-index: 0 !important;
                }
            }

            &:focus-within,
            &:focus-within *,
            {
                z-index: 1 !important;
            }

            &:hover,
            &:hover *
            {
                z-index: 2 !important;
            }

            &:first-child
            {
                > button[aria-expanded="true"]
                {
                    border-bottom-left-radius: 0 !important;
                }

                [role="menu"]
                {
                    border-top-left-radius: 0 !important;
                }
            }

            &:last-child
            {
                > button[aria-expanded="true"]
                {
                    border-bottom-right-radius: 0 !important;
                }

                [role="menu"]
                {
                    border-top-right-radius: 0 !important;
                }
            }

            [role="menu"]
            {
                margin-top: 1px !important;
                padding: 0 !important;
                overflow: hidden !important;
                border-radius: 3px !important;
            }

            [role="menuitemcheckbox"]
            {
                display: flex !important;
                align-items: center !important;
                padding: 0 17px 0 13px !important;
                min-height: 40px !important;

                > span:first-child
                {
                    font-size: calc(var(--font-base-font-size) * 1.5) !important;
                    margin-right: var(--size-inline-spacing) !important;
                    opacity: 0.6;

                    > img
                    {
                        display: block;
                        transform: none !important;
                    }
                }

                @include if-focus-hidden
                {
                    outline: none !important;
                }
            }


            &:not(:first-child):not(:last-child) button
            {
                clip-path: polygon(-1px -50%, calc(100% + 1px) -50%, calc(100% + 1px) 150%, -1px 150%);
            }

            &:first-child button
            {
                clip-path: polygon(-50% -50%, calc(100% + 1px) -50%, calc(100% + 1px) 150%, -50% 150%);
            }

            &:last-child button
            {
                clip-path: polygon(-1px -50%, 150% -50%, 150% 150%, -1px 150%);
            }
        }

        // Improve styling of info windows.

        .gm-style-iw-d::-webkit-scrollbar-track,
        .gm-style-iw-d::-webkit-scrollbar-track-piece,
        .gm-style-iw-c,
        .gm-style-iw-t::after
        {
            color: var(--google-map-popover-surface-text-color) !important;
            background: var(--google-map-popover-surface-color) !important;
        }
    }
}

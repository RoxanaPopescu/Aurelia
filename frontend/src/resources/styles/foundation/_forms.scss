////
/// @group foundation/forms
////

/// Foundational styles for the form elements defined by the HTML standard.
$__summary: comment;

@import "resources/index";


// Forms
// See: https://www.w3.org/TR/html51/sec-forms.html
// ====================================================================================================


// form
// Container for controls whose state will be submitted together.
// ----------------------------------------------------------------------------------------------------

form
{
    // Ensure consistent `margin` and `padding`.
    margin: 0;
    padding: 0;
}


// fieldset
// Container for related controls within a form.
// ----------------------------------------------------------------------------------------------------

fieldset
{
    // Remove the default browser styling.
    appearance: none;

    // Ensure consistent `margin` and `padding`.
    margin: 0;
    padding: 0;
    border: none;
}


// disabled
// The disabled state, in which opacity is applied to make the element appear unavailable.
// ----------------------------------------------------------------------------------------------------

[disabled=""],
[disabled="disabled"]
{
    opacity: var(--opacity-disabled);
    pointer-events: none;
    cursor: default;

    [disabled=""],
    [disabled="disabled"]
    {
        // TODO: This is not ideal, as it might override existing opacity applied to the element.
        // Needed to prevent unwanted opacity when a disabled
        // element is nested inside another disabled element.
        opacity: 1;
    }
}


// placeholder
// The placeholder content, to which opacity is applied to make it appear faded.
// ----------------------------------------------------------------------------------------------------

::placeholder
{
    color: var(--surface-input-surface-subtle-color);
}


// button and anchor
// Buttons and anchors, supporting the appearances `none`, `text`, `outline` and `solid`, and the accents,
// `neutral`, `primary`, `positive` and `negative`. Note that the default button appearance is `text`,
// the default accent is `neutral`, and buttons with `text` appearance have the touch area of a button.
// ----------------------------------------------------------------------------------------------------

// Style for anchors that should inherit the accent.
a
{
    &[accent="inherit"]
    {
        color: inherit;

        &:hover,
        &:any-link:hover,
        .focus-visible &:focus,
        .focus-visible &:any-link:focus
        {
            // If a neutral accent is applied, highlight when hovered or focused.
            color: var(--surface-primary-text-color--hover);
        }
    }
}

// Style for anchors with unspecified appearance.
a:not([appearance])
{
    // Add accent color support.
    @each $accent in $accents
    {
        &[accent="#{$accent}"]
        {
            color: var(--surface-#{$accent}-text-color);
        }
    }
}

button,
a[appearance]
{
    display: block;

    // Remove the default browser styling.
    appearance: none;
    margin: 0;
    font: inherit;

    // Prevent overflow.
    overflow: hidden;

    // Ensure consistent cursor.
    cursor: pointer;

    // Prevent shrinking.
    flex-shrink: 0;

    &:not([appearance="none"])
    {
        // Style to appear as a button.
        padding: 0 3.5rem;
        min-width: 10rem;
        min-height: 10rem;
        border: var(--border-width-medium) solid;
        border-radius: var(--border-radius-medium);
        border-color: transparent;
        text-align: center;
        font-weight: 500;
    }

    // Style for the `none` appearance.
    &[appearance="none"]
    {
        padding: 0;
        border: none;
        background: none;
        text-align: left;

        &:not([accent])
        {
            color: inherit;
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                color: var(--surface-#{$accent}-text-color);
            }
        }
    }

    // Style for the `text` and unspecified appearance.
    &:not([appearance]),
    &[appearance="text"],
    &[appearance="text-without-hover"]
    {
        background: transparent;
        border-color: transparent;

        &:not([accent])
        {
            color: var(--surface-neutral-text-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                color: var(--surface-#{$accent}-text-color);
            }
        }
    }

    // Style for the `icon` appearance.
    &[appearance="icon"]
    {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        min-width: 0;
        min-height: 0;
        padding: 0.25em;
        background: transparent;
        border-color: transparent;
        line-height: 1;

        &::before
        {
            // Hack to ensure the height matches the width.
            content: "";
            display: block;
            padding-top: 100%;
        }

        &:not([accent])
        {
            color: var(--surface-neutral-text-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                color: var(--surface-#{$accent}-text-color);
            }
        }
    }

    // Style for the `outline` appearance, and the `text` appearance when focused or hovered.
    &[appearance="outline"],
    &:not([appearance]):hover,
    .focus-visible &:not([appearance]):focus,
    &[appearance="text"]:hover,
    .focus-visible &[appearance="text"]:focus
    {
        background: transparent;

        &:not([accent])
        {
            border-color: var(--surface-neutral-border-color);
            color: var(--surface-neutral-text-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                border-color: var(--surface-#{$accent}-border-color);
                color: var(--surface-#{$accent}-text-color);
            }
        }
    }

    // Style for the `solid` appearance, and the `icon` appearance when focused or hovered.
    &[appearance="solid"],
    .focus-visible &[appearance="icon"]:focus,
    &[appearance="icon"]:hover
    {
        &:not([accent])
        {
            border-color: var(--surface-neutral-border-color);
            background: var(--surface-neutral-surface-color);
            color: var(--surface-neutral-surface-text-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                border-color: var(--surface-#{$accent}-border-color);
                background: var(--surface-#{$accent}-surface-color);
                color: var(--surface-#{$accent}-surface-text-color);
            }
        }
    }
}


// label, select, textarea, input
// Normalize styling across browsers.
// ----------------------------------------------------------------------------------------------------

label,
select,
textarea,
input
{
    font: inherit;
}

input[type="search"]::-webkit-search-decoration
{
    // Prevent unwanted indentation of the placeholder and value in Safari.
    -webkit-appearance: none;
}


// TODO: This should be removed as soon as possible.
// Styles targeting native element.
// ====================================================================================================

.use-form-styles
{

    // input (checkbox)
    // Checkbox supporting the checked, unchecked and indeterminate state.
    // ----------------------------------------------------------------------------------------------------

    input[type="checkbox"]
    {
        $size: 1.5em;
        $offset: ($size - 1em) / 2;

        // Remove the default browser styling.
        appearance: none;
        position: relative;
        margin: 0 $offset 0 0;
        border: none;
        padding: 0;
        width: 1em;
        height: 1em;
        line-height: inherit;
        font-size: inherit;
        background: none;
        cursor: pointer;

        // Animate color changes.
        transition: color var(--animation-duration-short);

        &:not([accent])
        {
            color: var(--surface-neutral-icon-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                color: var(--surface-#{$accent}-icon-color);
            }
        }

        &::after
        {
            content: "";
            position: absolute;
            left: ($offset * -1);
            top: ($offset * -1);
            width: $size;
            height: $size;
            mask-size: $size;
            mask-repeat: no-repeat;
            background: currentColor;

            /* stylelint-disable indentation */
            mask-image: url(
                "data:image/svg+xml;utf8," +
                "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>" +
                    "<path d='M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z'/>" +
                    "<path d='M0 0h24v24H0z' fill='none'/>" +
                "</svg>"
            );
            /* stylelint-enable */
        }

        &:checked::after
        {
            /* stylelint-disable indentation */
            mask-image: url(
                "data:image/svg+xml;utf8," +
                "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>" +
                    "<path d='M0 0h24v24H0z' fill='none'/>" +
                    "<path d='M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'/>" +
                "</svg>"
            );
            /* stylelint-enable */
        }

        &:indeterminate::after
        {
            /* stylelint-disable indentation */
            mask-image: url(
                "data:image/svg+xml;utf8," +
                "<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 24 24' width='24' height='24'>" +
                    "<path d='M0 0h24v24H0z' fill='none'/>" +
                    "<path d='M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z'/>" +
                "</svg>"
            );
            /* stylelint-enable */
        }

        label > &
        {
            // Ensure proper spacing between the label and the control.
            margin-right: var(--size-inline-spacing);
        }
    }


    // input (radio)
    // Radio button supporting the checked and unchecked state.
    // ----------------------------------------------------------------------------------------------------

    input[type="radio"]
    {
        $size: 1.5em;
        $offset: ($size - 1em) / 2;

        // Remove the default browser styling.
        appearance: none;
        position: relative;
        margin: 0 $offset 0 0;
        border: none;
        padding: 0;
        width: 1em;
        height: 1em;
        line-height: inherit;
        font-size: inherit;
        background: none;
        cursor: pointer;

        // Animate color changes.
        transition: color var(--animation-duration-short);

        &:not([accent])
        {
            color: var(--surface-neutral-icon-color);
        }

        // Add accent color support.
        @each $accent in $accents
        {
            &[accent="#{$accent}"]
            {
                color: var(--surface-#{$accent}-icon-color);
            }
        }

        &::after
        {
            content: "";
            position: absolute;
            left: ($offset * -1);
            top: ($offset * -1);
            width: $size;
            height: $size;
            mask-size: $size;
            mask-repeat: no-repeat;
            background: currentColor;

            /* stylelint-disable indentation */
            mask-image: url(
                "data:image/svg+xml;utf8," +
                "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>" +
                    "<path d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z'/>" +
                    "<path d='M0 0h24v24H0z' fill='none'/>" +
                "</svg>"
            );
            /* stylelint-enable */
        }

        &:checked::after
        {
            /* stylelint-disable indentation */
            mask-image: url(
                "data:image/svg+xml;utf8," +
                "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>" +
                    "<path d='M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z'/>" +
                    "<path d='M0 0h24v24H0z' fill='none'/>" +
                "</svg>"
            );
            /* stylelint-enable */
        }

        label > &
        {
            // Ensure proper spacing between the label and the control.
            margin-right: var(--size-inline-spacing);
        }
    }


    // label
    // Label which should be used to wrap any inputs that need a description.
    // ----------------------------------------------------------------------------------------------------

    label
    {
        display: flex;
        align-items: center;

        // Ensure consistent cursor.
        cursor: pointer;

        &[appearance="input"]
        {
            cursor: text;
        }

        > span
        {
            // Prevent text from shrinking, as it causes unwanted wrapping.
            flex-shrink: 0;
        }
    }


    // select, textarea, and inputs (text-like)
    // Controls which resemble text inputs, meaning that they can be styled as rectangles.
    // ----------------------------------------------------------------------------------------------------

    label[appearance="input"],
    select,
    textarea,
    input:not([type]),
    input[type="color"],
    input[type="date"],
    input[type="datetime-local"],
    input[type="email"],
    input[type="month"],
    input[type="number"],
    input[type="password"],
    input[type="search"],
    input[type="tel"],
    input[type="text"],
    input[type="time"],
    input[type="url"],
    input[type="week"]
    {
        // Remove the default browser styling.
        appearance: none;
        margin: 0;
        padding: 0 3rem;
        max-width: 100%;
        min-height: 10rem;
        border: var(--border-width-thin) solid var(--surface-input-border-color);
        border-radius: var(--border-radius-medium);
        font-size: inherit;
        line-height: inherit;
        color: var(--surface-input-surface-text-color);
        background: var(--surface-input-surface-color);

        // Expand to fill the available width by default.
        width: 100%;

        &:not(label)
        {
            display: block;
        }

        label[appearance="input"] > &
        {
            // Remove padding and border, as the label will have it too.
            padding-left: 0;
            padding-right: 0;

            // Reduce the min-height to compensate for the border on the label.
            min-height: calc(10rem - 2 * var(--border-width-thin));

            // Reduce the min-width to prevent overflow.
            min-width: 10rem;
        }
    }

    input[type="number"]
    {
        &::-webkit-inner-spin-button,
        &::-webkit-outer-spin-button
        {
            // Remove spin buttons in inputs of type `number`.
            appearance: none;
            margin: 0;
        }
    }

    textarea
    {
        // Set the default height.
        min-height: 20rem;

        // Set the default min-width to prevent horizontal resizing.
        min-width: 100%;

        // Ensure consistent padding.
        padding-top: 2.25rem;
        padding-bottom: 2.25rem;
    }

    select
    {
        // Remove the default browser styling.
        appearance: none;

        // Ensure consistent cursor.
        cursor: pointer;

        // Ensure consistent appearance of the dropdown arrow.
        padding-right: 2em;
        background-position: right -1.25em center;
        background-repeat: no-repeat;
        background-size: 1em;
        background-origin: content-box;

        /* stylelint-disable indentation */
        background-image: url(
            "data:image/svg+xml;utf8," +
            "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>" +
                "<path d='M128.4 160L96 192.3 256 352l160-159.7-32.4-32.3L256 287.3z' stroke='red'/>" +
            "</svg>"
        );
        /* stylelint-enable */
    }

}

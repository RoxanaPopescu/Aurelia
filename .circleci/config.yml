version: 2.1

references:
  container_config: &container_config
    docker:
      - image: circleci/node:10.15.3

orbs:
  azure-cli: circleci/azure-cli@1.0.3

jobs:
  checkout-code:
    <<: *container_config
    steps:
      - checkout

  setup-test-azure:
    executor: azure-cli/azure-docker
    steps:
      - checkout
      - azure-cli/login-with-service-principal
      - run:
          name: Setup azure CLI for test subscription
          command: az account set -s "Test"
      - run:
          name: Create resource group
          command: az group create -n ${AZURE_TEST_RESOURCE_GROUP} --location westeurope
      - run:
          name: Set defaults
          command: az configure --defaults group=${AZURE_TEST_RESOURCE_GROUP}
      - run:
          name: Create resources
          command: az group deployment create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file frontend/packages/cloud/azure-arm-template.json
            --parameters environment="test" serviceName=${PROJECT_NAME} dockerRegistryURL=${DOCKER_REGISTRY} dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD} dockerRegistryUsername=${DOCKER_REGISTRY_USERNAME}

  build:
    executor: azure-cli/azure-docker

    environment:
      DOCKER_IMAGE: ${DOCKER_REGISTRY_URL}/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}

    steps:
      - checkout
      - azure-cli/login-with-service-principal
      - run:
          name: Setup azure CLI for prod subscription
          command: az account set -s "Production"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP} acr=${DOCKER_REGISTRY}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_IMAGE}
            -f dockerfile .

  deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - run: echo ${DOCKER_IMAGE}
      # - azure-cli/login-with-service-principal
      # - run:
      #     name: Setup azure CLI for prod subscription
      #     command: az account set -s "Test"
      # - run:
      #     name: Add docker image to webapp
      #     command: az webapp config container set
      #       -r ${DOCKER_REGISTRY_URL}
      #       -s staging
      #       -i ${DOCKER_IMAGE}
      # - run:
      #     name: Start staging slot
      #     command: az webapp start -s staging
      # - run:
      #     name: Start staging slot
      #     command: az webapp start -s staging
      # - run:
      #     name: Swap slot with production
      #     command: az webapp deployment slot swap
      #       -n client-platform-test-mover
      #       -s staging
      #       --action swap
      # - run:
      #     name: Stop staging slot
      #     command: az webapp stop -s staging

  deploy-production:
    <<: *container_config
    steps:
      - run: echo "Deploying production..."

workflows:
  #   setup-test:
  #     jobs:
  #       - checkout-code
  #       - setup-test-azure

  deploy-test:
    jobs:
      - build
      - deploy-test:
          requires:
            - build
  # production:
  #   jobs:
  #     - build
  #     - request-testing:
  #         type: approval
  #         requires:
  #           - build
  #     - deploy-production:
  #         requires:
  #           - request-testing

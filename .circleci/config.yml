version: 2.1

jobs:
  setup-test-proxy:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Create resources
          command: az group deployment create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file frontend/packages/cloud/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|dockerbuilds.azurecr.io/client-nginx:latest"
            environment="test"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="proxy"

  setup-test-azure:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Create resources
          command: az group deployment create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file frontend/packages/cloud/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|empty"
            environment="test"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="client"

  setup-production-proxy:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Create resources
          command: az group deployment create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file frontend/packages/cloud/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|dockerbuilds.azurecr.io/client-nginx:latest"
            environment="prod"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="proxy"

  setup-production-azure:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Create resources
          command: az group deployment create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file frontend/packages/cloud/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|empty"
            environment="prod"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="client"

  build-test:
    executor: azure-cli/azure-docker

    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_TEST} acr=${DOCKER_REGISTRY_TEST}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-test-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_TEST}
            -p ${DOCKER_REGISTRY_PASSWORD_TEST}
            -r ${DOCKER_REGISTRY_TEST}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n client-platform-test-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  build-production:
    executor: azure-cli/azure-docker

    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_PRODUCTION} acr=${DOCKER_REGISTRY_PRODUCTION}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  deploy-build-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-mover"
      - run:
          name: Add docker image to build slot
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTIONT}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s build
            -i $(cat /tmp/workspace/docker-image)

  deploy-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-mover"
      - run:
          name: Add docker image to staging slot
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTIONT}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n client-platform-prod-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

workflows:
  setup-azure:
    jobs:
      - approve-test:
          type: approval
      - setup-test-azure:
          requires:
            - approve-test

      - approve-proxy-test:
          type: approval
      - setup-test-proxy:
          requires:
            - approve-proxy-test

      - approve-production:
          type: approval
      - setup-production-azure:
          requires:
            - approve-production

      - approve-proxy-production:
          type: approval
      - setup-production-proxy:
          requires:
            - approve-proxy-production

  build-and-deploy:
    jobs:
      - build-test
      - deploy-test:
          requires:
            - build-test
      - build-production
      - deploy-build-production:
          requires:
            - build-production
      - production-approval:
          type: approval
          requires:
            - build-production
      - deploy-production:
          requires:
            - build-production
            - production-approval

commands:
  setup-azure-command:
    description: "Deploy to azure"
    parameters:
      account:
        description: "Test or production"
        type: string
      resource-group:
        type: string
    steps:
      - checkout
      - azure-cli/login-with-service-principal
      - run:
          name: Setup azure CLI for test subscription
          command: az account set -s << parameters.account >>
      - run:
          name: Create resource group
          command: az group create -n << parameters.resource-group >> --location westeurope
      - run:
          name: Set defaults
          command: az configure --defaults group=<< parameters.resource-group >>
orbs:
  azure-cli: circleci/azure-cli@1.0.3

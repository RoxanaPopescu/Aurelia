version: 2.1

orbs:
  azure-cli: circleci/azure-cli@1.2.0
  sentry-release: adhawk/sentry-release@0.0.3

jobs:
  bff-setup-test:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-v2"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="test"
            serviceName=${BACKEND_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="bff"

  bff-setup-production:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v2"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="prod"
            serviceName=${BACKEND_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="bff"

  bff-user-management-setup-test:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-user-management-v2"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="test"
            serviceName="bff-user-management-v2"
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="bff"
  
  bff-user-management-setup-production:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v3"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="prod"
            serviceName=${BACKEND_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="bff"

  bff-user-management-build-test:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-user-management-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_TEST} acr=${DOCKER_REGISTRY_TEST}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_TEST}.azurecr.io/${BACKEND_NAME}_user_management:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f backend/dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_TEST}.azurecr.io/${BACKEND_NAME}_user_management:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  bff-user-management-deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-user-management-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="bff-user-management-v2-test-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_TEST}
            -p ${DOCKER_REGISTRY_PASSWORD_TEST}
            -r ${DOCKER_REGISTRY_TEST}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest
          command: |
            curl -f -LI https://bff-user-management-v2-test-mover-staging.azurewebsites.net/health
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n bff-user-management-v2-test-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  bff-build-test:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_TEST} acr=${DOCKER_REGISTRY_TEST}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_TEST}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f backend/dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_TEST}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  bff-deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Test"
          resource-group: "test-bff-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="bff-v2-test-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_TEST}
            -p ${DOCKER_REGISTRY_PASSWORD_TEST}
            -r ${DOCKER_REGISTRY_TEST}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest
          command: |
            curl -f -LI https://bff-v2-test-mover-staging.azurewebsites.net/health
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n bff-v2-test-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  bff-build-prod:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_PRODUCTION} acr=${DOCKER_REGISTRY_PRODUCTION}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f backend/dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  bff-deploy-prod:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="bff-v2-prod-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest
          command: |
            curl -f -LI https://bff-v2-prod-mover-staging.azurewebsites.net/health
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n bff-v2-prod-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  bff-user-management-build-prod:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v3"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_PRODUCTION} acr=${DOCKER_REGISTRY_PRODUCTION}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f backend/dockerfile .
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${BACKEND_NAME}:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  bff-user-management-deploy-prod:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-bff-v3"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="bff-v3-prod-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest
          command: |
            curl -f -LI https://bff-v3-prod-mover-staging.azurewebsites.net/health
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n bff-v3-prod-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  client-setup-test:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="test"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="client"

  client-setup-production:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="prod"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="client"

  client-user-management-setup-production:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform-v2"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_PROD_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="prod"
            serviceName=${PROJECT_NAME}
            dockerRegistryURL=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryUsername=${DOCKER_REGISTRY_PRODUCTION}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            type="client"

  client-build-test:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-command:
          changes-in-folder: "frontend"
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_TEST} acr=${DOCKER_REGISTRY_TEST}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
            --build-arg ENVIRONMENT=preview
            --build-arg COMMIT=${CIRCLE_SHA1}
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  client-user-management-setup-test:
    executor: azure-cli/azure-docker
    steps:
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform-user-management"
      - run:
          name: Create resources
          command: az deployment group create
            -n ${AZURE_TEST_RESOURCE_GROUP}-${CIRCLE_BUILD_NUM}
            --template-file .circleci/azure-arm-template.json
            --parameters
            dockerImage="DOCKER|nginx"
            environment="test"
            serviceName="platform-user-management"
            dockerRegistryURL=${DOCKER_REGISTRY_TEST}
            dockerRegistryUsername=${DOCKER_REGISTRY_TEST}
            dockerRegistryPassword=${DOCKER_REGISTRY_PASSWORD_TEST}
            type="client"

  client-user-management-build-test:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-command:
          changes-in-folder: "frontend"
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform-user-management"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_TEST} acr=${DOCKER_REGISTRY_TEST}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client_user_management:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
            --build-arg ENVIRONMENT=preview
            --build-arg COMMIT=${CIRCLE_SHA1}
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_TEST}.azurecr.io/${PROJECT_NAME}_client_user_management:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  client-user-management-deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform-user-management"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-user-management-test-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_TEST}
            -p ${DOCKER_REGISTRY_PASSWORD_TEST}
            -r ${DOCKER_REGISTRY_TEST}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest the website
          command: |
            curl -f -LI https://client-platform-user-management-test-mov-staging.azurewebsites.net
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n client-platform-user-management-test-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  client-deploy-test:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Test"
          resource-group: "test-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-test-mover"
      - run:
          name: Add docker image to webapp
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_TEST}
            -p ${DOCKER_REGISTRY_PASSWORD_TEST}
            -r ${DOCKER_REGISTRY_TEST}.azurecr.io
            -s staging
            -i $(cat /tmp/workspace/docker-image)
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest the website
          command: |
            curl -f -LI https://client-platform-test-mover-staging.azurewebsites.net
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n client-platform-test-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

  client-build-production:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-command:
          changes-in-folder: "frontend"
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_PRODUCTION} acr=${DOCKER_REGISTRY_PRODUCTION}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
            --build-arg ENVIRONMENT=production
            --build-arg COMMIT=${CIRCLE_SHA1}
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  client-deploy-build-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-mover"
      - run:
          name: Add docker image to build slot
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s build
            -i $(cat /tmp/workspace/docker-image)

  client-deploy-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-mover"
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Start staging slot
          command: az webapp start -s build
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest the build slot
          command: |
            curl -f -LI https://client-platform-prod-mover-build.azurewebsites.net
      - run:
          name: Swap build -> staging slot
          command: az webapp deployment slot swap
            -n client-platform-prod-mover
            -s build
            --action swap
            --target-slot staging
      - run:
          name: Smoketest the staging slot
          command: |
            curl -f -LI https://client-platform-prod-mover-staging.azurewebsites.net
      - run:
          name: Swap staging -> production
          command: az webapp deployment slot swap
            -n client-platform-prod-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging
      - run:
          name: Stop build slot
          command: az webapp stop -s build

  client-user-management-build-production:
    docker:
      - image: mcr.microsoft.com/azure-cli:2.25.0

    steps:
      - setup-command:
          changes-in-folder: "frontend"
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults group=${DOCKER_RESOURCE_GROUP_PRODUCTION} acr=${DOCKER_REGISTRY_PRODUCTION}
      - run:
          name: Build docker image
          command: az acr build
            -t ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
            -f dockerfile .
            --build-arg ENVIRONMENT=production
            --build-arg COMMIT=${CIRCLE_SHA1}
      - run:
          name: Create workspace folder
          command: mkdir -p workspace
      - run:
          name: Prepare docker image file for workspace
          command: echo ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io/${PROJECT_NAME}_client:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} > workspace/docker-image
      - persist_to_workspace:
          root: workspace
          paths:
            - docker-image

  client-user-management-deploy-build-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-v2-mover"
      - run:
          name: Add docker image to build slot
          command: az webapp config container set
            -u ${DOCKER_REGISTRY_PRODUCTION}
            -p ${DOCKER_REGISTRY_PASSWORD_PRODUCTION}
            -r ${DOCKER_REGISTRY_PRODUCTION}.azurecr.io
            -s build
            -i $(cat /tmp/workspace/docker-image)

  client-user-management-deploy-production:
    executor: azure-cli/azure-docker

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform-v2"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-v2-mover"
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Start staging slot
          command: az webapp start -s build
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Smoketest the build slot
          command: |
            curl -f -LI https://client-platform-prod-v2-mover-build.azurewebsites.net
      - run:
          name: Swap build -> staging slot
          command: az webapp deployment slot swap
            -n client-platform-prod-v2-mover
            -s build
            --action swap
            --target-slot staging
      - run:
          name: Smoketest the staging slot
          command: |
            curl -f -LI https://client-platform-prod-v2-mover-staging.azurewebsites.net
      - run:
          name: Swap staging -> production
          command: az webapp deployment slot swap
            -n client-platform-prod-v2-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging
      - run:
          name: Stop build slot
          command: az webapp stop -s build

  client-rollback:
    executor: azure-cli/azure-docker

    steps:
      - setup-azure-command:
          account: "Production"
          resource-group: "prod-client-platform"
      - run:
          name: Set defaults
          command: az configure
            --defaults web="client-platform-prod-mover"
      - run:
          name: Start staging slot
          command: az webapp start -s staging
      - run:
          name: Wait to make sure webapp has started
          command: sleep 20
      - run:
          name: Swap slot with production
          command: az webapp deployment slot swap
            -n client-platform-prod-mover
            -s staging
            --action swap
      - run:
          name: Stop staging slot
          command: az webapp stop -s staging

workflows:
  setup-azure:
    jobs:
      - bff-user-management-approve-test:
          type: approval
      - bff-user-management-setup-test:
          requires:
            - bff-user-management-approve-test
      - client-user-management-approve-test:
          type: approval
      - client-user-management-setup-test:
          requires:
            - client-user-management-approve-test

      - bff-user-management-approve-prod:
          type: approval
      - bff-user-management-setup-prod:
          requires:
            - bff-user-management-approve-prod
      - client-user-management-approve-prod:
          type: approval
      - client-user-management-setup-prod:
          requires:
            - client-user-management-approve-prod

      - bff-approve-test:
          type: approval
      - bff-setup-test:
          requires:
            - bff-approve-test
      - bff-approve-production:
          type: approval
      - bff-setup-production:
          requires:
            - bff-approve-production

      - client-approve-test:
          type: approval
      - client-setup-test:
          requires:
            - client-approve-test

      - client-approve-production:
          type: approval
      - client-setup-production:
          requires:
            - client-approve-production

  bff-user-management-build-and-deploy:
    jobs:
      - bff-user-management-build-test:
          filters:
            branches:
              only:
                - user-management
      - bff-user-management-deploy-test:
          requires:
            - bff-user-management-build-test
      - bff-user-management-build-prod:
          filters:
            branches:
              only:
                - user-management
      - bff-user-management-deploy-prod:
          requires:
            - bff-user-management-build-prod

  client-user-management-build-and-deploy:
    jobs:
      - client-user-management-build-test:
          filters:
            branches:
              only:
                - user-management
      - client-user-management-deploy-test:
          requires:
            - client-user-management-build-test
      - client-user-management-build-prod:
          filters:
            branches:
              only:
                - user-management
      - client-user-management-deploy-prod:
          requires:
            - client-user-management-build-prod

  bff-build-and-deploy:
    jobs:
      - bff-build-test:
          filters:
            branches:
              only:
                - master
      - bff-deploy-test:
          requires:
            - bff-build-test
      - bff-build-prod:
          filters:
            branches:
              only:
                - master
      - bff-deploy-prod:
          requires:
            - bff-build-prod

  client-build-and-deploy:
    jobs:
      - client-build-test:
          filters:
            branches:
              only:
                - master
      - client-deploy-test:
          requires:
            - client-build-test
      - client-build-production:
          filters:
            branches:
              only:
                - master
      - client-deploy-build-production:
          requires:
            - client-build-production
      - client-deploy-production:
          requires:
            - client-deploy-build-production
      - sentry-release/sentry-release:
          requires:
            - client-deploy-production
          sentry-environment: production
          sentry-project: platform

  rollback:
    jobs:
      - client-approval:
          type: approval
      - client-rollback:
          requires:
            - client-approval

commands:
  setup-command:
    description: "General setup"
    parameters:
      changes-in-folder:
        description: "What folder to check for changes"
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: Setup git
          command: git config --global user.email "buildserver@usemover.com" && git config --global user.name "Buildserver"
      - when:
          condition: << parameters.changes-in-folder >>
          steps:
            - run:
                name: Verify changes to app path
                command: git diff --name-only --diff-filter=ADMR @~..@ << parameters.changes-in-folder >> | grep . && echo “Changes in directory found, continuing…“ || circleci step halt

  setup-azure-command:
    description: "Deploy to azure"
    parameters:
      account:
        description: "Test or production"
        type: string
      resource-group:
        type: string
    steps:
      - checkout
      - azure-cli/login-with-service-principal
      - run:
          name: Setup azure CLI for test subscription
          command: az account set -s << parameters.account >>
      - run:
          name: Create resource group
          command: az group create -n << parameters.resource-group >> --location westeurope
      - run:
          name: Set defaults
          command: az configure --defaults group=<< parameters.resource-group >>

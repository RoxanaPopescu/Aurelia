"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRelativePath = void 0;
var tslib_1 = require("tslib");
var path = tslib_1.__importStar(require("path"));
/**
 * Gets the relative file path for the specified file, relative to the specified base path, where the base path
 * may itself be relative to the current working directory. If no base path is specified, the current working
 * directory will be used.
 *
 * @example
 *
 * // Get a relative path for use as source in an export file or for prefixing ids in content files:
 * getRelativePath(file.absolutePath, file.globBasePath || taskConfig.baseFilePath)
 *
 * // Get a relative path for use when referencing files or folders in log messages:
 * getRelativePath(file.absolutePath)
 *
 * @param absolutePath The absolute path of the file for which a relative path should be returned.
 * @param basePath The base path to use, or undefined to use the current working directory.
 * @returns The relative file path.
 */
function getRelativePath(absolutePath, basePath) {
    var relativeFilePath;
    if (basePath != null) {
        var absoluteBaseFilePath = path.isAbsolute(basePath) ? basePath : path.join(process.cwd(), basePath);
        relativeFilePath = path.relative(absoluteBaseFilePath, absolutePath);
    }
    else {
        relativeFilePath = path.relative(process.cwd(), absolutePath);
    }
    return "./" + relativeFilePath.replace(/\\/g, "/");
}
exports.getRelativePath = getRelativePath;
//# sourceMappingURL=utilities.js.map
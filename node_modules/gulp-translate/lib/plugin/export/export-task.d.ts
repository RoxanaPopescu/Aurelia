import { ITemplateParser } from "../../core/template-parser/template-parser";
import { IFile } from "../file";
import { PluginConfig } from "../plugin-config";
import { IPluginTask } from "../plugin-task";
import { ExportTaskConfig } from "./export-task-config";
/**
 * Represents the task.
 */
export declare class ExportTask implements IPluginTask {
    private readonly _pluginConfig;
    private readonly _taskConfig;
    private readonly _templateParser;
    private readonly _exportContentFile;
    /**
     * Creates a new instance of the ExportTask type.
     * @param pluginConfig The plugin configuration to use.
     * @param taskConfig The task configuration to use.
     * @param templateParser The ITemplateParser instance to use.
     */
    constructor(pluginConfig: PluginConfig, taskConfig: ExportTaskConfig, templateParser: ITemplateParser);
    /**
     * Processes the specified file.
     * @param file The file to process.
     * @returns A promise that will be resolved with the processed file.
     */
    process(file: IFile): Promise<IFile>;
    /**
     * Finalizes the task.
     * @returns A promise that will be resolved when the task has finalized its work.
     */
    finalize(): Promise<void>;
}

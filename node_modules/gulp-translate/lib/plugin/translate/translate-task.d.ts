import { TemplateParserConfig } from "../../core/template-parser/template-parser-config";
import { IFile } from "../file";
import { PluginConfig } from "../plugin-config";
import { IPluginTask } from "../plugin-task";
import { TranslateTaskConfig } from "./translate-task-config";
/**
 * Represents the task.
 */
export declare class TranslateTask implements IPluginTask {
    private readonly _pluginConfig;
    private readonly _taskConfig;
    private readonly _templateParserConfig;
    /**
     * Creates a new instance of the TranslateTask type.
     * @param pluginConfig The plugin configuration to use.
     * @param taskConfig The task configuration to use.
     * @param templateParserConfig The template parser configuration to use.
     */
    constructor(pluginConfig: PluginConfig, taskConfig: TranslateTaskConfig, templateParserConfig: TemplateParserConfig);
    /**
     * Processes the specified file.
     * @param file The file to process.
     * @returns A promise that will be resolved with the processed file.
     */
    process(file: IFile): Promise<IFile>;
    /**
     * Geta a named content translator implementation, or the specified instance.
     */
    private getContentTranslator;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentHash = void 0;
var tslib_1 = require("tslib");
var crypto = tslib_1.__importStar(require("crypto"));
/**
 * Represents a content hash implementation, which generates a unique SHA-1 hash based on localizable content.
 */
var ContentHash = /** @class */ (function () {
    /**
     * Creates a new instance of the DefaultContentHash type.
     * @param hashLength The length of the hash identifying a content instance, in the range [1, 32].
     */
    function ContentHash(hashLength) {
        this._hashMap = {};
        this._hashLength = hashLength;
    }
    /**
     * Gets a hash for the specified content and hint.
     * @param content The content based on which a hash should be computed.
     * @param hint The hint based on which a hash should be computed.
     * @returns A string representing the computed hash.
     */
    ContentHash.prototype.compute = function (content, hint) {
        var unhashed = content + ":" + (hint || "");
        var longHash = crypto.createHash("sha1").update(unhashed, "utf8").digest("hex");
        var shortHash = longHash.substring(0, this._hashLength);
        var cachedHash = this._hashMap[shortHash] || (this._hashMap[shortHash] = longHash);
        if (cachedHash !== longHash) {
            throw new Error("A content hash collision was detected. You may need to increase the hash length.");
        }
        return shortHash;
    };
    return ContentHash;
}());
exports.ContentHash = ContentHash;
//# sourceMappingURL=content-hash.js.map